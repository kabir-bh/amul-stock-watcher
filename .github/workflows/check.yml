name: Amul Stock (Primary)

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write

    # Expose secrets as env so we can use env.* in `if:` expressions
    env:
      PRODUCT_URL: ${{ secrets.PRODUCT_URL }}
      BUTTON_SELECTOR: ${{ secrets.BUTTON_SELECTOR }}
      IN_STOCK: ${{ secrets.IN_STOCK }}
      OUT_OF_STOCK: ${{ secrets.OUT_OF_STOCK }}
      STABILITY: 2
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm install --no-audit --no-fund
      - run: npx playwright install --with-deps chromium

      # Run checker (index.js must write outputs via GITHUB_OUTPUT)
      - id: runcheck
        run: node index.js

      # Save .state.json so the next run knows prior status
      - name: Save state file to repo
        if: always()
        run: |
          if [ -f .state.json ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .state.json
            git commit -m "chore: update state [skip ci]" || echo "No state change to commit"
            git push
          fi

      # Telegram alert (only if a change happened AND TG env vars present)
      - name: Telegram on change
        if: ${{ steps.runcheck.outputs.status && env.TG_BOT_TOKEN != '' && env.TG_CHAT_ID != '' }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
           -H 'Content-Type: application/json' \
           -d "{\"chat_id\":\"${TG_CHAT_ID}\",\"text\":\"${{ steps.runcheck.outputs.status }} â†’ ${{ steps.runcheck.outputs.url }}\"}"

      # Email alert (only if a change happened AND email env vars present)
      - name: Email on change
        if: ${{ steps.runcheck.outputs.status && env.EMAIL_FROM != '' && env.EMAIL_TO != '' && env.EMAIL
