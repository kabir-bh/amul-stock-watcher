name: Amul Stock (Primary)

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # Install dependencies
      - run: npm install --no-audit --no-fund

      # Install Playwright browsers + OS deps (Chromium only = faster)
      - run: npx playwright install --with-deps chromium

      # ⬇️ RUN THE CHECKER (this sets outputs if a change happened)
      - id: runcheck
        run: node index.js
        env:
          PRODUCT_URL: ${{ secrets.PRODUCT_URL }}
          BUTTON_SELECTOR: ${{ secrets.BUTTON_SELECTOR }}
          IN_STOCK: ${{ secrets.IN_STOCK }}
          OUT_OF_STOCK: ${{ secrets.OUT_OF_STOCK }}
          STABILITY: "2"

      # ⬇️ SAVE .state.json back to the repo so next run knows prior status
      - name: Save state file to repo
        if: always()
        run: |
          if [ -f .state.json ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .state.json
            git commit -m "chore: update state [skip ci]" || echo "No state change to commit"
            git push
          fi

      # ⬇️ Telegram only if a change was detected AND TG secrets are present
      - name: Telegram on change
        if: ${{ steps.runcheck.outputs.status && secrets.TG_BOT_TOKEN != '' && secrets.TG_CHAT_ID != '' }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
           -H 'Content-Type: application/json' \
           -d "{\"chat_id\":\"${{ secrets.TG_CHAT_ID }}\",\"text\":\"${{ steps.runcheck.outputs.status }} → ${{ steps.runcheck.outputs.url }}\"}"
           
      # ⬇️ Email only if a change was detected AND email secrets are present
      - name: Email on change
        if: ${{ steps.runcheck.outputs.status
                && secrets.EMAIL_FROM != '' && secrets.EMAIL_TO != '' && secrets.EMAIL_APP_PASSWORD != '' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_FROM }}
          password: ${{ secrets.EMAIL_APP_PASSWORD }}
          subject: "[Amul Stock] ${{ steps.runcheck.outputs.status }}"
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          body: "${{ steps.runcheck.outputs.status }} → ${{ steps.runcheck.outputs.url }}"
